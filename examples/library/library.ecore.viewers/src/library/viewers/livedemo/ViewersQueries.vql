/*******************************************************************************
 * Copyright (c) 2010-2013, Tamas Szabo, Istvan Rath and Daniel Varro
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   Tamas Szabo - initial API and implementation
 *   Istvan Rath - minor modifications
 *******************************************************************************/
package library.viewers.livedemo

import "http://eclipse.org/emf/examples/library"

// item

@Item(item = w, label = "Writer: $w.name$")
@Format(color = "#ed8700", textColor = "#ffffff")
pattern writer(w) { Writer(w);}

// edge

/*
 * Writer w1 is influenced by w2, since he wrote some book
 * that (indirectly or directly) references one of w2's works.
 */
@Edge(source = W1, target = W2, label = "influencedBy")
@Format(lineColor = "#ed8700")
pattern influencedBy(W1: Writer, W2: Writer) {
	Book.writers(B1, W1);
	Book.writers(B2, W2);
	find allReferencesTo(B2, B1);
}

/*
 * Book Ref is contained in B's set of transitive references.
 */
private pattern allReferencesTo(B: Book, Ref: Book){
	find bookCitation+(Ref, B);
} 

/*
 * Book b1 cites Book b2.
 */
private pattern bookCitation(B1 : Book, B2 : Book) {
	Book.citations(B1, B2);
}

